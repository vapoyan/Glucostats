name: Android Build Workflow

on:
  push:
    branches:
      - develop  # Triggers on push to develop
      - main     # Triggers on push to main

jobs:
  build-debug:
    if: github.ref == 'refs/heads/develop'  # Only run this job if pushing to develop
    name: Build and Test in Debug Mode
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Debug service json file
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
        run: |
          echo "$GOOGLE_PLAY_SERVICE_ACCOUNT_JSON" > /tmp/service_account.json
          cat /tmp/service_account.json  # Check the file's contents    

      - name: Build with Gradle (Debug Mode)
        run: ./gradlew assembleDebug
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}

      - name: Run tests
        run: ./gradlew testDebugUnitTest

  build-release:
    if: github.ref == 'refs/heads/main'  # Only run this job if pushing to main
    name: Build and Deploy Release to Google Play
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Decode and save keystore file
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > keystore.jks

      - name: Build with Gradle (Release Mode)
        run: ./gradlew assembleRelease
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          ANDROID_KEYSTORE: keystore.jks
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload artifact for later use
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

      - name: Install Fastlane
        run: |
          gem install fastlane --user-install
          export PATH="$HOME/.gem/ruby/3.0.0/bin:$PATH"

      - name: Upload to Google Play (Internal Testing)
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
        run: |
          echo "$GOOGLE_PLAY_SERVICE_ACCOUNT_JSON" > /tmp/service_account.json
          cat /tmp/service_account.json  # Check the file's contents
          fastlane supply --apk app/build/outputs/apk/release/*.apk --track internal --json_key /tmp/service_account.json

#     - name: Upload to Google Play (Production)
#       env:
#         GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
#       run: |
#         echo "$GOOGLE_PLAY_SERVICE_ACCOUNT_JSON" | base64 --decode > /tmp/service_account.json
#         fastlane supply --apk *.apk --track production --json_key /tmp/service_account.json